{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cegeka\\\\Proiect\\\\ProgramInternshipModal\\\\src\\\\components\\\\Main\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as api from \"../../api\";\nimport { ProgramList } from \"../Program\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [programs, setPrograms] = useState([]);\n  const [technologys, setTechnologys] = useState([]);\n  useEffect(() => {\n    const localPrograms = localStorage.getItem(\"programs\");\n    const localTechnologys = localStorage.getItem(\"technologys\");\n\n    if (localPrograms && localTechnologys) {\n      const programResponse = api.getPrograms();\n      setPrograms(programResponse);\n      const technologyResponse = api.getTechonologys();\n      setTechnologys(technologyResponse);\n    } else {\n      const programResponse = api.getPrograms();\n      setPrograms(programResponse);\n      const technologyResponse = api.getTechonologys();\n      setTechnologys(technologyResponse);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"programs\", JSON.stringify(programs));\n  }, [programs]);\n  useEffect(() => {\n    localStorage.setItem(\"technologys\", JSON.stringify(technologys));\n  }, [technologys]);\n\n  const createProgram = program => {\n    const timestamp = Date.now();\n    program.id = `program-${timestamp}`;\n    setPrograms(prevPrograms => [...prevPrograms, program]);\n  };\n\n  const editProgram = (key, updateProgram) => {\n    const updatePrograms = programs.map(program => program.id === key ? updateProgram : program);\n    setPrograms(updatePrograms);\n  };\n\n  const deleteProgram = key => {\n    const updatePrograms = programs.filter(program => program.id !== key);\n    setPrograms(updatePrograms);\n  };\n\n  const programList = () => /*#__PURE__*/_jsxDEV(ProgramList, {\n    programs: programs,\n    technologys: technologys,\n    deleteProgram: deleteProgram,\n    editProgram: editProgram,\n    createProgram: createProgram\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n\n  return programList();\n};\n\n_s(Main, \"teeIcKAKp02BVQeTQEAnI9At6dE=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["E:/Cegeka/Proiect/ProgramInternshipModal/src/components/Main/Main.tsx"],"names":["React","useEffect","useState","api","ProgramList","Main","programs","setPrograms","technologys","setTechnologys","localPrograms","localStorage","getItem","localTechnologys","programResponse","getPrograms","technologyResponse","getTechonologys","setItem","JSON","stringify","createProgram","program","timestamp","Date","now","id","prevPrograms","editProgram","key","updateProgram","updatePrograms","map","deleteProgram","filter","programList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AAGA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAiB,EAAjB,CAAxC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAoB,EAApB,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAtB;AACA,UAAMC,gBAAgB,GAAGF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAzB;;AAEA,QAAIF,aAAa,IAAIG,gBAArB,EAAuC;AACrC,YAAMC,eAAe,GAAGX,GAAG,CAACY,WAAJ,EAAxB;AACAR,MAAAA,WAAW,CAACO,eAAD,CAAX;AACA,YAAME,kBAAkB,GAAGb,GAAG,CAACc,eAAJ,EAA3B;AACAR,MAAAA,cAAc,CAACO,kBAAD,CAAd;AACD,KALD,MAKO;AACL,YAAMF,eAAe,GAAGX,GAAG,CAACY,WAAJ,EAAxB;AACAR,MAAAA,WAAW,CAACO,eAAD,CAAX;AACA,YAAME,kBAAkB,GAAGb,GAAG,CAACc,eAAJ,EAA3B;AACAR,MAAAA,cAAc,CAACO,kBAAD,CAAd;AACD;AACF,GAfQ,EAeN,EAfM,CAAT;AAiBAf,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAed,QAAf,CAAjC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeZ,WAAf,CAApC;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,QAAMa,aAAa,GAAIC,OAAD,IAA2B;AAC/C,UAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACAH,IAAAA,OAAO,CAACI,EAAR,GAAc,WAAUH,SAAU,EAAlC;AACAhB,IAAAA,WAAW,CAAEoB,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAkBL,OAAlB,CAAnB,CAAX;AACD,GAJD;;AAKA,QAAMM,WAAW,GAAG,CAACC,GAAD,EAAcC,aAAd,KAA8C;AAChE,UAAMC,cAAc,GAAGzB,QAAQ,CAAC0B,GAAT,CAAcV,OAAD,IAClCA,OAAO,CAACI,EAAR,KAAeG,GAAf,GAAqBC,aAArB,GAAqCR,OADhB,CAAvB;AAGAf,IAAAA,WAAW,CAACwB,cAAD,CAAX;AACD,GALD;;AAMA,QAAME,aAAa,GAAIJ,GAAD,IAAiB;AACrC,UAAME,cAAc,GAAGzB,QAAQ,CAAC4B,MAAT,CAAiBZ,OAAD,IAAaA,OAAO,CAACI,EAAR,KAAeG,GAA5C,CAAvB;AACAtB,IAAAA,WAAW,CAACwB,cAAD,CAAX;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAG,mBAClB,QAAC,WAAD;AACE,IAAA,QAAQ,EAAE7B,QADZ;AAEE,IAAA,WAAW,EAAEE,WAFf;AAGE,IAAA,aAAa,EAAEyB,aAHjB;AAIE,IAAA,WAAW,EAAEL,WAJf;AAKE,IAAA,aAAa,EAAEP;AALjB;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,SAAOc,WAAW,EAAlB;AACD,CAvDD;;GAAM9B,I;;KAAAA,I;AAyDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as api from \"../../api\";\r\nimport { ProgramModel } from \"../../models/ProgramModel\";\r\nimport { TechnologyModel } from \"../../models/TechnologyModel\";\r\nimport { ProgramList } from \"../Program\";\r\n\r\nconst Main = () => {\r\n  const [programs, setPrograms] = useState<ProgramModel[]>([]);\r\n  const [technologys, setTechnologys] = useState<TechnologyModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    const localPrograms = localStorage.getItem(\"programs\");\r\n    const localTechnologys = localStorage.getItem(\"technologys\");\r\n\r\n    if (localPrograms && localTechnologys) {\r\n      const programResponse = api.getPrograms();\r\n      setPrograms(programResponse);\r\n      const technologyResponse = api.getTechonologys();\r\n      setTechnologys(technologyResponse);\r\n    } else {\r\n      const programResponse = api.getPrograms();\r\n      setPrograms(programResponse);\r\n      const technologyResponse = api.getTechonologys();\r\n      setTechnologys(technologyResponse);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"programs\", JSON.stringify(programs));\r\n  }, [programs]);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"technologys\", JSON.stringify(technologys));\r\n  }, [technologys]);\r\n\r\n  const createProgram = (program: ProgramModel) => {\r\n    const timestamp = Date.now();\r\n    program.id = `program-${timestamp}`;\r\n    setPrograms((prevPrograms) => [...prevPrograms, program]);\r\n  };\r\n  const editProgram = (key: string, updateProgram: ProgramModel) => {\r\n    const updatePrograms = programs.map((program) =>\r\n      program.id === key ? updateProgram : program\r\n    );\r\n    setPrograms(updatePrograms);\r\n  };\r\n  const deleteProgram = (key: string) => {\r\n    const updatePrograms = programs.filter((program) => program.id !== key);\r\n    setPrograms(updatePrograms);\r\n  };\r\n\r\n  const programList = () => (\r\n    <ProgramList\r\n      programs={programs}\r\n      technologys={technologys}\r\n      deleteProgram={deleteProgram}\r\n      editProgram={editProgram}\r\n      createProgram={createProgram}\r\n    />\r\n  );\r\n\r\n  return programList();\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}